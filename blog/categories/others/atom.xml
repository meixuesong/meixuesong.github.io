<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Others | 码出人生]]></title>
  <link href="http://blog.ubone.com/blog/categories/others/atom.xml" rel="self"/>
  <link href="http://blog.ubone.com/"/>
  <updated>2014-09-14T21:20:21+08:00</updated>
  <id>http://blog.ubone.com/</id>
  <author>
    <name><![CDATA[梅雪松]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[程序员的数学]]></title>
    <link href="http://blog.ubone.com/blog/2014/08/25/cheng-xu-yuan-de-shu-zi/"/>
    <updated>2014-08-25T22:22:26+08:00</updated>
    <id>http://blog.ubone.com/blog/2014/08/25/cheng-xu-yuan-de-shu-zi</id>
    <content type="html"><![CDATA[<p>这是一篇《程序员的数学》读书笔记。这本书没有讲高深的数学理论，而是用浅显易懂的道理推导出一些数学知识。整本书浅显易懂，学不了太多东西，但对启发数学思维有一点用处。</p>

<!--more-->


<p>全书共分为8章，每章的内容或要点摘录如下：</p>

<h2>第1章 0的故事</h2>

<p>本章首先介绍了10进制、2进制计数法。它们都属于<strong>按位计数</strong>，例如10进制的2503可表示为：</p>

<blockquote><p><strong>2</strong> * 10<sup>3</sup> + <strong>5</strong> * 10<sup>2</sup> + <strong>0</strong> * 10<sup>1</sup> + <strong>3</strong> * 10<sup>0</sup></p></blockquote>

<p>同样地，2进制的1100可表示为：</p>

<blockquote><p><strong>1</strong> * 2<sup>3</sup> + <strong>1</strong> * 2<sup>2</sup> + <strong>0</strong> * 2<sup>1</sup> + <strong>0</strong> * 2<sup>0</sup></p></blockquote>

<p>将10进制的转换成2进制，只需要除以2，将将余数排列起来就可以了，如下图，将12转换成2进制，变成1100：</p>

<p><img src="/myresource/images/image_blog_20140825_m01.jpg" alt="image" /></p>

<p>除了按位计数，还有<strong>罗马计数法</strong>，例如钟表表盘。没有0，使用I(1), V(5), X(10), L(50), C(100), D(500), M(1000)来记数，将并排的数字加起来就是所表示的数。其中有“减法规则”，如IV，在V的左侧写I，表示5-1。例如：</p>

<ul>
<li>MCMXCVIII = (M) + (CM) + (XC) + (V) + (III)</li>
<li>= (1000) + (1000 &ndash; 100) + (100 &ndash; 10) + (5) + (3)</li>
<li>= 1998</li>
</ul>


<h3>第2章 逻辑</h3>

<p>逻辑的基本思路：完整性（有没有遗漏？）和排他性（有没有重复？）。可以画一根数轴来检查：</p>

<p><img src="/myresource/images/image_blog_20140825_m02.jpg" alt="image" /></p>

<p><strong>最容易出错的地方往往发生在边界值上！</strong></p>

<p>除了常见的逻辑运算（非、并且、或者）外，异或指的是：A⊕B，仅当A和B不同时为True, 相同时为False。</p>

<p>德摩根定律指的是(﹁指非，^表示并且， V表示或者)：</p>

<ul>
<li>(﹁A)V(﹁B) = ﹁(A ^ B)</li>
<li>(﹁A)<sup>﹁B</sup> = ﹁(A V B)</li>
</ul>


<h3>卡诺图</h3>

<p>卡诺图是一个非常好的工具，它能够简化复杂的逻辑表达式。例如对于这样的规则：</p>

<p>当发生以下情况时按下按钮：</p>

<ol>
<li>绿灯、黄灯、红灯都灭</li>
<li>黄灯灭，红灯亮</li>
<li>绿灯灭，黄灯亮</li>
<li>绿灯、黄灯、红灯都亮</li>
</ol>


<p>可以设有以下命题，画出卡诺图：</p>

<ol type="a">
<li>绿灯亮</li>
<li>黄灯亮</li>
<li>红灯亮</li>
</ol>


<p><img src="/myresource/images/image_blog_20140825_m03.jpg" alt="image" /></p>

<p>最后得出逻辑表达式：当(﹁A)V C时，按下按钮。</p>

<h2>第3章 余数</h2>

<p>将较大的数字除一下，就能根据余数分组。例如求10<sup>100</sup>天以后是星期几？此外，还有奇偶校验的问题。将大问题转换成小问题，余数是一种重要武器。</p>

<h2>第4章 数学归纳法</h2>

<p>两个步骤：</p>

<ol>
<li>证明P(0)成立。</li>
<li>证明不论k为0以上的哪个整数，若P(k)成立，则P(k + 1)也成立。</li>
</ol>


<h2>第5章 排列组合</h2>

<ul>
<li>加法法则：|A U B| = |A| + |B|</li>
<li>乘法法则：|A x B| = |A| x |B|</li>
</ul>


<p>基本知识：n位2进制数可以表示的数的总数为2<sup>n</sup>。</p>

<h3>置换</h3>

<p>如果将A, B, C三张牌按照ABC, ACB, BAC&hellip;等顺序排列，共有多少种排法？</p>

<ul>
<li>第1张牌有3种选法</li>
<li>第2张牌，扣除了第1张牌，因此有2种选法</li>
<li>第3张牌，有1张选法。</li>
</ul>


<p>因此共有3 x 2 x 1 = 6种排法。</p>

<p>将n个事务按顺序进行排列称为置换（Substitution）。n张牌的置换总数为n的阶乘：n! = n x (n &ndash; 1) x (n &ndash; 2) x &hellip; x 2 x 1。</p>

<h3>排列</h3>

<p>从n个事物中取出一部分进行排列（Permutation）。从A、B、C、D、E共5张牌，选出3张牌进行排列，有多少种排法？</p>

<ul>
<li>第1张的取法有5种</li>
<li>第2张的取法有4种</li>
<li>第3张的取法有3种</li>
</ul>


<p>因此共有：5x4x3=60种排列。即从n张牌中取出k张进行排列的种数为：P<sub>n</sub><sup>k</sup> = n x (n &ndash; 1) x (n &ndash; 2) x &hellip; x (n &ndash; k + 1) = n! /(n-k)!</p>

<h3>组合</h3>

<p>从n个事物中取出一部分，不考虑它们的顺序，称为组合（Combination）。从n张牌，选出k张牌，不考虑顺序，有多少种取法？可以先按排列一样，考虑顺序进行计数，然后除以重复计数的部分。即：</p>

<ul>
<li>C<sub>n</sub><sup>k</sup> = n张里面取k张的排列总数 / k张的置换总数</li>
<li>= P<sub>n</sub><sup>k</sup> / P<sub>k</sub><sup>k</sup></li>
<li>= n! / ((n-1)!k!)</li>
</ul>


<h3>置换、排列和组合的关系</h3>

<p>置换和组合相结合就是排列。为什么？置换表示“3张牌的交替排列方法”，组合表示“3张牌的取法”，两者结合起来就是“取出3张牌，进行交替排列”，即表示排列。</p>

<h2>第6章 递归</h2>

<p>递归就是要将复杂的问题简化。假设现在要找出问题中的递归结构，可以按以下步骤进行：
* 从n层的整体问题中隐去部分问题。
* 判断剩余部分是否是n-1层的问题。</p>

<p>即要发现F(n)与F(n-1)，甚至F(n-2)之间的关系。</p>

<h2>第7章 指数爆炸</h2>

<p>1mm厚的纸，在对折39次之后，就达到54万公里，超过了地球与月亮之间的距离！这就是指数爆炸。利用指数爆炸可以解决一些计算问题。例如二分法查找，在15个数中查找特定的数，最多只需要3次。</p>

<p>对于很大的数，处理时可以转换成对数处理。</p>

<p>处理指数爆炸的四种方法：</p>

<ol>
<li>极力求解，即增加计算机性能。</li>
<li>变相求解，即转换成简单问题求解。</li>
<li>近似求解。</li>
<li>概率求解，处于研究中。</li>
</ol>


<h2>第8章 不可解问题</h2>

<p>反证法，就是首先假设“命题的否定形式”成立，然后根据假设论证，推导出矛盾的结果。例如论证“为什么不存在最大的整数”。假设存在，且M就是最大的整数，那么M + 1 > M，与假设矛盾。因此不存在最大的整数。</p>

<p>什么是<strong>可数</strong>？集合的元素是有限的，或者集合中的所有元素都与正整数一一对应，那么这个集合就被定义为<strong>可数（Countable）</strong>。书中举例了一些可数的集合（有限集合、0以上的所有偶数的集合、所有整数的集合、所有有理数的集合、程序的集合），以及不可数的集合（所有整数数列的集合、所有实数的集合、所有函数的集合），并用反证法进行了证明。</p>

<p>不可解问题是“原则上不能用程序来解决的问题”。书中举了“停机”问题的例子，即判断“某程序在给定数据下，是否会在有限时间内结束运行”的问题。</p>

<h2>总结</h2>

<p>在解决问题时，要学会使用“先用较小的数试算”的方法，发现规律、性质、结构、循环、一致性等，认清隐含在问题中的模式。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在GitHub上写博客]]></title>
    <link href="http://blog.ubone.com/blog/2014/06/25/zai-githubshang-xie-bo-ke/"/>
    <updated>2014-06-25T22:54:07+08:00</updated>
    <id>http://blog.ubone.com/blog/2014/06/25/zai-githubshang-xie-bo-ke</id>
    <content type="html"><![CDATA[<p>一直想找个能支持Markdown的博客平台。在尝试了包括CSDN、Loft、点点等博客平台之后，均觉不太满意。CSDN太业余，一个IT业最大的社区网站，竟然不支持Markdown。Loft偏文艺，不适合技术。点点还不错，支持Markdown，本来准备最终选择它了，但不爽有二：<!--more-->一是主题没合适的，界面布局、代码高亮显示、字体大小和摘要显示等总有一点让你觉得勉强；二是使用独立域名，要求太不清晰。输入相关信息后总是提示我的博客太少，不让使用自己的域名。但你好歹说一下标准是啥啊？多少篇博客才能满足你这条件啊？这种体验太差了。最后放弃。</p>

<p>一番折腾后，发现可以直接使用<a href="http://github.com">GitHub</a>写博客，而且几年前就有这个功能了。看来真是有点Out了！</p>

<p>安装的过程完全参照<a href="http://octopress.org/">Octopress</a>网站和唐巧的两篇博客：</p>

<ul>
<li><a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">象写程序一样写博客：搭建基于github的博客</a></li>
<li><a href="http://blog.devtang.com/blog/2014/06/02/use-gitcafe-to-host-blog/">将博客从GitHub迁移到GitCafe</a></li>
</ul>


<p>安装过程就不再重复了，说说有哪些不同。</p>

<p>Octopress的默认主题背景是黑色，有点太压抑了。代码高亮显示的颜色也不爽，所以改了点颜色：</p>

<p><code>css
//sass/custom/_colors.scss
$page-bg:       #F4F3DE;
$header-bg:     #5B4947;
$base03:          #eee; //darkest blue
$base02:          #ddd; //dark blue
$solar-blue:      navy;
</code></p>

<p>另外对配置文件_config.yml，除了常规修改外，还修改了：</p>

<p>```</p>

<h1>修改日期格式</h1>

<p>date_format: &ldquo;%Y-%m-%d&rdquo;</p>

<h1>增加评论功能</h1>

<p>disqus_short_name: 你的disqus short name
disqus_show_comment_count: true
```</p>

<p>唐巧使用的是国内的一个评论系统，实际上Octopress内置的插件包含了评论功能。在<a href="http://disqus.com">Disqus</a>注册帐号并设置shortname后，修改_config.yml即可。</p>

<p>在GitHub上建立博客，最担心的是访问速度。GitHub已经使用全球CDN来服务GitHub Pages，参见：<a href="https://github.com/blog/1715-faster-more-awesome-github-pages">Faster, More Awesome GitHub Pages</a>。实际测试下来速度很快，用Chrome监视，打开页面基本就是2－3秒时间。</p>

<p>但是在手机上打开博客时，却非常慢。最后发现原因是使用了googleapis.com托管的jQuery.min.js，在天朝这样的网站是很没保障的。解决办法是修改source/_includes/head.html：</p>

<p>```
//将原来的googleapis jquery库改为本地jQuery：</p>

<script src="http://blog.ubone.com/javascripts/libs/jquery.min.js"></script>


<p>```</p>

<p>改完后手机上访问也基本可以秒杀了。</p>

<p>用GitHub + Octopress建立博客，过程虽然复杂了点，但最终效果相当不错，你值得拥有！</p>
]]></content>
  </entry>
  
</feed>
